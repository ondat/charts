apiVersion: v1
data:
  operator_config.yaml: |
    apiVersion: config.storageos.com/v1
    kind: OperatorConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: storageos-operator
    webhookCertRefreshInterval: 15m
    webhookServiceName: storageos-operator-webhook
    webhookSecretRef: storageos-operator-webhook
    validatingWebhookConfigRef: storageos-operator-validating-webhook
kind: ConfigMap
metadata:
  labels:
    app: {{ template "storageos.name" . }}
    app.kubernetes.io/component: operator
    chart: {{ template "storageos.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: storageos-operator
  namespace: {{ .Release.Namespace }}
---

apiVersion: v1
data:
  {{- if and .Values.images.apiManager.repository .Values.images.apiManager.tag }}
  RELATED_IMAGE_API_MANAGER: "{{ .Values.images.apiManager.repository }}:{{ .Values.images.apiManager.tag }}"
  {{- end }}
  {{- if and .Values.images.csiV1ExternalAttacherV3.repository .Values.images.csiV1ExternalAttacherV3.tag }}
  RELATED_IMAGE_CSIV1_EXTERNAL_ATTACHER_V3: "{{ .Values.images.csiV1ExternalAttacherV3.repository }}:{{ .Values.images.csiV1ExternalAttacherV3.tag }}"
  {{- end }}
  {{- if and .Values.images.csiV1ExternalProvisioner.repository .Values.images.csiV1ExternalProvisioner.tag }}
  RELATED_IMAGE_CSIV1_EXTERNAL_PROVISIONER: "{{ .Values.images.csiV1ExternalProvisioner.repository }}:{{ .Values.images.csiV1ExternalProvisioner.tag }}"
  {{- end }}
  {{- if and .Values.images.csiV1ExternalResizer.repository .Values.images.csiV1ExternalResizer.tag }}
  RELATED_IMAGE_CSIV1_EXTERNAL_RESIZER: "{{ .Values.images.csiV1ExternalResizer.repository }}:{{ .Values.images.csiV1ExternalResizer.tag }}"
  {{- end }}
  {{- if and .Values.images.csiV1ExternalSnapshotter.repository .Values.images.csiV1ExternalSnapshotter.tag }}
  RELATED_IMAGE_CSIV1_EXTERNAL_SNAPSHOTTER: "{{ .Values.images.csiV1ExternalSnapshotter.repository }}:{{ .Values.images.csiV1ExternalSnapshotter.tag }}"
  {{- end }}
  {{- if and .Values.images.csiV1LivenessProbe.repository .Values.images.csiV1LivenessProbe.tag }}
  RELATED_IMAGE_CSIV1_LIVENESS_PROBE: "{{ .Values.images.csiV1LivenessProbe.repository }}:{{ .Values.images.csiV1LivenessProbe.tag }}"
  {{- end }}
  {{- if and .Values.images.csiV1NodeDriverRegistrar.repository .Values.images.csiV1NodeDriverRegistrar.tag }}
  RELATED_IMAGE_CSIV1_NODE_DRIVER_REGISTRAR: "{{ .Values.images.csiV1NodeDriverRegistrar.repository }}:{{ .Values.images.csiV1NodeDriverRegistrar.tag }}"
  {{- end }}
  {{- if and .Values.images.kubeScheduler.repository .Values.images.kubeScheduler.tag }}
  RELATED_IMAGE_KUBE_SCHEDULER: "{{ .Values.images.kubeScheduler.repository }}:{{ .Values.images.kubeScheduler.tag }}"
  {{- end }}
  {{- if and .Values.images.metricsExporter.repository .Values.images.metricsExporter.tag }}
  RELATED_IMAGE_METRICS_EXPORTER: "{{ .Values.images.metricsExporter.repository }}:{{ .Values.images.metricsExporter.tag }}"
  {{- end }}
  {{- if and .Values.images.nodeManager.repository .Values.images.nodeManager.tag }}
  RELATED_IMAGE_NODE_MANAGER: "{{ .Values.images.nodeManager.repository }}:{{ .Values.images.nodeManager.tag }}"
  {{- end }}
  {{- if and .Values.images.portalManager.repository .Values.images.portalManager.tag }}
  RELATED_IMAGE_PORTAL_MANAGER: "{{ .Values.images.portalManager.repository }}:{{ .Values.images.portalManager.tag }}"
  {{- end }}
  {{- if and .Values.images.init.repository .Values.images.init.tag }}
  RELATED_IMAGE_STORAGEOS_INIT: "{{ .Values.images.init.repository }}:{{ .Values.images.init.tag }}"
  {{- end }}
  {{- if and .Values.images.node.repository .Values.images.node.tag }}
  RELATED_IMAGE_STORAGEOS_NODE: "{{ .Values.images.node.repository }}:{{ .Values.images.node.tag }}"
  {{- end }}
  {{- if and .Values.images.upgradeGuard.repository .Values.images.upgradeGuard.tag }}
  RELATED_IMAGE_UPGRADE_GUARD: "{{ .Values.images.upgradeGuard.repository }}:{{ .Values.images.upgradeGuard.tag }}"
  {{- end }}
kind: ConfigMap
metadata:
  labels:
    app: {{ template "storageos.name" . }}
    app.kubernetes.io/component: operator
    chart: {{ template "storageos.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: storageos-related-images
  namespace: {{ .Release.Namespace }}
---

apiVersion: v1
data:
  portal_config.yaml: |
    apiVersion: storageos.com/v1alpha1
    kind: PortalConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceNamespace: storageos
      resourceName: storageos-portal-manager
kind: ConfigMap
metadata:
  labels:
    app: {{ template "storageos.name" . }}
    app.kubernetes.io/component: portal-manager
  name: storageos-portal-manager
  namespace: {{ template "cluster.namespace" . }}

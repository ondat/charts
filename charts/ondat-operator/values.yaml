# Default values for storageos.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

name: ondat-operator

k8sDistro: default

serviceAccount:
  create: true
  name: storageos-operator

podSecurityPolicy:
  enabled: false
  annotations:
    {}
    ## Specify pod annotations
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#seccomp
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#sysctl
    ##
    # seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
    # seccomp.security.alpha.kubernetes.io/defaultProfileName: 'docker/default'
    # apparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'

# operator-specific configuation parameters.
images:
  operator:
    repository: storageos/operator
    tag: v2.8.0
  apiManager:
    repository: storageos/api-manager
    tag: v1.2.11
  csiV1ExternalAttacherV3:
    repository: quay.io/k8scsi/csi-attacher
    tag: v3.1.0
  csiV1ExternalProvisioner:
    repository: storageos/csi-provisioner
    tag: v2.1.1-snapshots-patched
  csiV1ExternalResizer:
    repository: quay.io/k8scsi/csi-resizer
    tag: v1.1.0
  csiV1ExternalSnapshotter:
    repository: quay.io/k8scsi/csi-snapshotter
    tag: v4.0.0
  csiV1LivenessProbe:
    repository: quay.io/k8scsi/livenessprobe
    tag: v2.2.0
  csiV1NodeDriverRegistrar:
    repository: quay.io/k8scsi/csi-node-driver-registrar
    tag: v2.1.0
  init:
    repository: storageos/init
    tag: v2.1.2
  kubeRbacProxy:
    repository: quay.io/brancz/kube-rbac-proxy
    tag: v0.10.0
  # These values SHOULD be set dynamically on install based on the Kubernetes version.
  # This behaviour will be overridden if values are set here.
  # i.e. only fill these fields if you are sure you know what you're doing.
  kubeScheduler:
    repository:
    tag:
  node:
    repository: storageos/node
    tag: v2.8.0
  metricsExporter:
    repository: storageos/metrics-exporter
    tag: v0.1.6
  nodeManager:
    repository: storageos/node-manager
    tag: v0.0.8
  portalManager:
    repository: storageos/portal-manager
    tag: v1.0.5
  upgradeGuard:
    repository: storageos/upgrade-guard
    tag: v0.0.4

# parameters for StorageOS resource quotas
# Required for GKE installation!
resourceQuotas:
  create: true
  pods: 100

# cluster-specific configuation parameters.
cluster:
  # set create to true if the operator should auto-create the StorageOS cluster.
  create: true

  # Name of the deployment.
  name: storageos

  # Namespace to install the StorageOS cluster into.
  # By default the release namespace will be used.
  namespace:

  # Name of the secret containing StorageOS API credentials.
  secretRefName: storageos-api

  # Enable protection for volumes during orchestrator upgrades - Tech Preview
  nodeManagerFeatures:
    upgradeGuard:
      enabled: false

  # Enable Prometheus metrics exporting
  metricsExporter:
    enabled: false

  # Enable volume snapshotting with Kasten
  snapshots:
    enabled: false
    volumeSnapshotClassName: storageos

  # Default admin account.
  admin:
    # Username to authenticate to the StorageOS API with.
    username: storageos

    # Password to authenticate to the StorageOS API with. This must be at least
    # 8 characters long.
    password: storageos

  # sharedDir should be set if running kubelet in a container.  This should
  # be the path shared into to kubelet container, typically:
  # "/var/lib/kubelet/plugins/kubernetes.io~storageos".  If not set, defaults
  # will be used.
  sharedDir:

  # Key-Value store backend.
  kvBackend:
    svcName: storageos-etcd
    # The namespace to look for the kvBackend in.
    # Will default to the release namespace
    namespace:
    backend: etcd
    tlsSecretName: storageos-etcd-secret

  # Resource requests and limits for the node container
  resources: {}
#    requests:
#      cpu: 1
#      memory: 2Gi
#    limits:
#      cpu:
#      memory:

  # Node selector terms to install StorageOS on.
  nodeSelectorTerm:
    key:
    value:

  # Pod toleration for the StorageOS pods.
  toleration:
    key:
    value:

  # To disable anonymous usage reporting across the cluster, set to true.
  # Defaults to false. To help improve the product, data such as API usage and
  # StorageOS configuration information is collected.
  disableTelemetry: false

  # Connect to Ondat portal
  portalManager:
    secretRefName: storageos-portal-client
    enabled: false
    clientId:
    secret:
    apiUrl:
    tenantId:


  # The name of the StorageClass to be created
  # Using a YAML anchor to allow deletion of the custom storageClass
  storageClassName: storageos

# The following is used for cleaning up unmanaged cluster resources when
# auto-install is enabled.
cleanup:
  images:
    kubectl:
      repository: bitnami/kubectl
      tag: 1.18.2

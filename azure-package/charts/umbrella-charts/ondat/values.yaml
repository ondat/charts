ondat-operator:
  # An exhaustive list of configurable options for ondat-operator
  # can be found at https://github.com/ondat/charts/blob/main/charts/ondat-operator/values.yaml
  cluster:
    # Name of the deployment.
    name: storageos
    # Namespace to install the StorageOS cluster into.
    # By default the release namespace will be used.
    namespace:
    # Enable protection for volumes during orchestrator upgrades - Tech Preview
    nodeManagerFeatures:
      upgradeGuard:
        enabled: false
    # Default admin account.
    admin:
      # Username to authenticate to the StorageOS API with.
      username: storageos
      # Password to authenticate to the StorageOS API with. This must be at least
      # 8 characters long.
      password: storageos
    # Resource requests and limits for the node container
    resources: {}
    #    requests:
    #      cpu: 1
    #      memory: 2Gi
    #    limits:
    #      cpu:
    #      memory:

    # Node selector terms to install StorageOS on.
    nodeSelectorTerm:
      key:
      value:
    # Pod toleration for the StorageOS pods.
    toleration:
      key:
      value:
    # To disable anonymous usage reporting across the cluster, set to true.
    # Defaults to false. To help improve the product, data such as API usage and
    # StorageOS configuration information is collected.
    disableTelemetry: false
    # Connect to Ondat portal
    portalManager:
      secretRefName: storageos-portal-client
      enabled: false
      clientId:
      secret:
      apiUrl:
      tenantId:
    # The name of the StorageClass to be created
    # Using a YAML anchor to allow deletion of the custom storageClass
    storageClassName: storageos
etcd-cluster-operator:
  # An exhaustive list of configurable options for etcd-cluster-operator
  # can be found at https://github.com/ondat/charts/blob/main/charts/etcd-cluster-operator/values.yaml
  cluster:
    # Name of the etcd cluster
    name: storageos-etcd
    # Namespace to which to deploy the etcd cluster
    # By default the release namespace will be used.
    # If specifying this and also installing ondat, you will need to set the .cluster.kvBackend.namespace value for that chart
    namespace:
    # Number of replicas for etcd, suggest 5
    replicas: 5
    # Storageclass for etcd backing storage
    # NOTE: We CANNOT use storageos here as this is the egg to Ondat's chicken
    storageclass:
    # Amount of storage to allocate per etcd volume
    storage: 12Gi
    # Resource requests and limits for etcd pods
    resources:
      requests:
        cpu: 500m
        memory: 500Mi
      limits:
        cpu: 500m
        memory: 500Mi
    # Node selector terms to install etcd on
    nodeSelectorTerm:
      key:
      value:
    # Pod toleration for etcd pods
    toleration:
      key:
      value:
  ondat:
    # Namespace in which ondat operator is installed
    # By default the release namespace will be used.
    namespace:
global:
  azure:
    images:
      etcdClusterOperatorController:
        registry: docker.io/storageos
        image: etcd-cluster-operator-controller
        tag: v0.4.3
        digest: "sha256:dc0d4415d575f5ddb8987b96ee48c2b2cf54a3b0f60b65f7c4dd6eec8a4c3e62"
      etcdClusterOperatorProxy:
        registry: docker.io/storageos
        image: etcd-cluster-operator-proxy
        tag: v0.4.3
        digest: "sha256:6eb841afb457d4f14fd4992b1dced2369d4010a0dfe96ff4507e6d20de8f0926"
      etcd:
        registry: quay.io/coreos
        image: etcd
        tag: v3.5.4
        digest: "sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
      operator:
        registry: docker.io/storageos
        image: operator
        tag: v2.9.1
        digest: "sha256:613f1c98786d12b7bd04626de7117177eef889f0552b66653ff77c3b2f8ff0c2"
      apiManager:
        registry: docker.io/storageos
        image: api-manager
        tag: v1.2.14
        digest: "sha256:3ead4cd7dbe35feb7ff10a6a500f9fcc57ca7f986e39a28d36b31517bc68beb9"
      csiV1ExternalAttacherV3:
        registry: quay.io/k8scsi
        image: csi-attacher
        tag: v3.1.0
        digest: "sha256:e3334d505bebc44afba610e2c218ca7b4993cac61fc0951d75033ccc971a1347"
      csiV1ExternalProvisioner:
        registry: docker.io/storageos
        image: csi-provisioner
        tag: v2.1.1-snapshots-patched
        digest: "sha256:356f7fe2db61ab4089300d9de3303a5073d10117bd0c05b20599b64324f26d0d"
      csiV1ExternalResizer:
        registry: quay.io/k8scsi
        image: csi-resizer
        tag: v1.1.0
        digest: "sha256:9a4130836e6eead0bfd1d6cca3e569a2ca27b82ce542927fd3da7e7eeff5fe22"
      csiV1ExternalSnapshotter:
        registry: quay.io/k8scsi
        image: csi-snapshotter
        tag: v4.0.0
        digest: "sha256:72d92119b26aa2616d1579694618bcb89ea2218ba030bab1bdeb65f5dff83efa"
      csiV1LivenessProbe:
        registry: quay.io/k8scsi
        image: livenessprobe
        tag: v2.2.0
        digest: sha256:d657c5644aefe12d4bbdffb900602df65c67dbaea99b26b2005465b88b1bc96e
      csiV1NodeDriverRegistrar:
        registry: quay.io/k8scsi
        image: csi-node-driver-registrar
        tag: v2.1.0
        digest: sha256:fb4f139b51ae5b449a132949d7f3d839fa9ea5c57df1c1cd61f781389fdacefb
      init:
        registry: docker.io/storageos
        image: init
        tag: v2.1.3
        digest: sha256:6b3e390add40f6ab0fa1cc4faa542ad243ee191d60b1dcccaf91b474617757be
      # The following is used for cleaning up unmanaged cluster resources when
      # auto-install is enabled.
      kubectl:
        registry: docker.io/bitnami
        image: kubectl
        tag: 1.18.2
        digest: sha256:2c81804f8cb0571e96f28e748a0cffab9fa0f45a2b5290a8f67625e724cce43e
      kubeRbacProxy:
        registry: quay.io/brancz
        image: kube-rbac-proxy
        tag: v0.10.0
        digest: sha256:0aacdc5ba56fbcaa7534e928e38e42447194b1029f79d8cf869c5e3bddacb23e
      node:
        registry: docker.io/storageos
        image: node
        tag: v2.9.1
        digest: sha256:c91d9f10db2382e56bcb7ad304103830baeb8e15f1748ee88cc38752b137e6bf
      metricsExporter:
        registry: docker.io/storageos
        image: metrics-exporter
        tag: v0.1.7
        digest: sha256:a5dacb5cef282eee15da68269a2ae37ea69558796c7eba940929552bd82ea00b
      nodeManager:
        registry: docker.io/storageos
        image: node-manager
        tag: v0.0.8
        digest: sha256:62575e314b853e055d477f1934e515e51850c551291c71c52405231bb1d16a7b
      portalManager:
        registry: docker.io/storageos
        image: portal-manager
        tag: v1.0.6
        digest: sha256:00e63589d6f68287694da9615ecfdc076af0e101a8859c7294a06cf1fbbe1965
      nodeGuard:
        registry: docker.io/storageos
        image: node-guard
        tag: v0.0.2
        digest: sha256:d0e9d0f667465ffd623998bc25dfdd9ea46c81c6f318d5feb3897476ab9c884b
    billingIdentifier: DONOTMODIFY
